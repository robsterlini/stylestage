a {
  color: $link;
  text-decoration-color: rgba($link, 0.5);
  padding: 0 rem(2);
  margin-left: rem(-2);
  margin-right: rem(-2);
  transition: 150ms ease-in-out;
  transition-property: color, background, text-decoration-color;

  &:hover,
  &:focus {
    color: $link-hover;
    text-decoration-color: currentColor;
  }

  &:focus {
    background: $link-hover;
    // box-shadow: $link rem(2) 0 0, $link rem(-2) 0 0;
    color: white;
    outline: none;
  }

  &:visited {
    color: $link-visited;
    text-decoration-color: rgba($link-visited, 0.5);

    &:hover,
    &:focus {
      color: $link-visited-hover;
      text-decoration-color: currentColor;
    }

    &:focus {
      color: white;
      background: $link-visited-hover;
      // box-shadow: $link-visited-hover rem(2) 0 0, $link-visited-hover rem(-2) 0 0;
    }
  }

  &[href^="https://"] {

    &::after {
      content: '↗';
    }
  }
}

@mixin button {
  display: table;
  margin-top: calc(2 * var(--baseline));
  text-decoration: none;
  font-weight: 600;
  padding-right: 0.75em;

  &::after {
    content: '→';
    transition: transform 300ms ease-in-out;
    display: inline-block;
    margin-left: 0.25em;
  }

  &:hover,
  &:focus {

    &::after {
      transform: translateX(0.5em);
    }
  }
}

.link {

  &-github {

    svg {
      display: inline-block;
      width: calc(var(--baseline) * 2);
      vertical-align: middle;
      position: relative;
      top: rem(-1);
    }

    path {
      fill: currentColor;
    }

    &:hover,
    &:focus {

      svg {
        animation: pop 800ms ease-out;

        @keyframes pop {
          0% {
            transform: scale(1);
          }
          20%,
          40%, {
            opacity: 1;
            transform: scale(0.7) rotate(-10deg);
          }
          50%,
          90% {
            transform: scale(1.25) rotate(82deg);
          }
          100% {
            transform: scale(1) rotate(72deg);
          }
        }
      }
    }
  }
}

.skip-link {
  @include button;

  margin: 0;
  line-height: rem(24);
  position: fixed;
  top: rem(44);
  right: rem(20);

  @include min-width($layout-xl + 40) {
    right: calc((100% - #{rem($layout-xl)}) / 2);
  }

  &:not(:focus) {
    @include visuallyhidden;
  }
}

